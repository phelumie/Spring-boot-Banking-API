apiVersion: apps/v1
kind: Deployment
metadata:
    name: api-gateway
    namespace: prod
    labels:
        app: api-gateway
        version: v1
spec:
    replicas: 1
    selector:
        matchLabels:
            app: api-gateway
            version: v1
    template:
        metadata:
            annotations:
                prometheus.io/path: /actuator/prometheus
                prometheus.io/scrape: "true"
                prometheus.io/port: "8765"        
            labels:
                app: api-gateway
                version: v1
        spec:
          serviceAccountName: api-gateway
          containers:
          - name: api-gateway
            image: sunday/api-gateway
            imagePullPolicy: Never
            ports:
            - containerPort: 8765
            env:
              - name: spring.config.import
                value: optional:configserver:http://cloud-config:8888
              - name: spring.profiles.active
                value: prod,localCache
              - name: spring.cloud.config.profile
                value: prod,localCache
              - name: JDK_JAVA_OPTIONS
                value: -XX:+UseZGC -XX:MaxMetaspaceSize=200m -XX:+DisableExplicitGC -XX:MaxRAMPercentage=60 -Xss256k -verbose:gc
            resources:
              requests:
                memory: 200Mi
              limits:
                memory: 1Gi
            livenessProbe:
              httpGet:
                path: /actuator/health/liveness
                port: 8765
              initialDelaySeconds: 300
              timeoutSeconds: 60
              periodSeconds: 5
            readinessProbe:
              httpGet:
                path: /actuator/health/readiness
                port: 8765
              initialDelaySeconds: 300 
              periodSeconds: 10              
              timeoutSeconds: 60
            volumeMounts:
            - mountPath: /usr/java/openjdk-18/lib/security
              name: copy
          initContainers:
          - name: init-cacerts
            image: sunday/api-gateway
            imagePullPolicy: Never
            resources:
              requests:
                memory: 50Mi
              limits:
                memory: 100Mi
            command:
            - bash
            - -c
            - |
              cp -R /usr/java/openjdk-18/lib/security/* /cacerts/
              keytool -import -noprompt -trustcacerts -alias local -file /security/tls.crt -keystore /cacerts/cacerts -storepass changeit
              cp  cacerts/* /copy
               keytool -list -keystore /cacerts/cacerts -alias local
            volumeMounts:
            - mountPath: /cacerts
              name: cacerts
            - mountPath: /copy
              name: copy
            - mountPath: /security
              name: tls
          volumes:
          - name: cacerts
            emptyDir: {}
          - name: copy
            emptyDir: {}
          - name: tls
            secret:
              secretName: keycloak-tls
              defaultMode: 0400   
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-gateway
    service: api-gateway
  name: api-gateway
  namespace: prod
spec:
  ports:
  - name: http
    port: 8765
    targetPort: 8765
  selector:
    app: api-gateway 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway
  namespace: prod
  labels:
    account: api-gateway
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: mygateway
  namespace: prod
spec:
  selector:
    istio: ingressgateway # use istio default ingress gateway
  servers:
  - port:
      number: 443
      name: https-keycloak
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: secret-tls
      httpsRedirect: true
    hosts:
    - httpbin.example.com
  - port:
      number: 443
      name: https-helloworld
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: secret-tls
      httpsRedirect: true
    hosts:
    - helloworld-v1.example.com

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: api-gateway
spec:
  hosts:
  - "httpbin.example.com"
  gateways:
  - mygateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        port:
          number: 8765
        host: api-gateway

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: api-gateway
spec:
  host: api-gateway
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL




